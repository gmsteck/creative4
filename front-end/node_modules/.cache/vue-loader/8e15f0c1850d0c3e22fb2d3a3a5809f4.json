{"remainingRequest":"/root/dev/creative4/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/dev/creative4/front-end/src/views/Itinerary.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/root/dev/creative4/front-end/src/views/Itinerary.vue","mtime":1638837187440},{"path":"/root/dev/creative4/front-end/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/dev/creative4/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/root/dev/creative4/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/root/dev/creative4/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/dev/creative4/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubm9uZSB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzJweDsKfQoud3JhcHBlciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5zZWFyY2ggewogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIHdpZHRoOiA1MCU7Cn0KCmZvcm0gewogIGRpc3BsYXk6IHRhYmxlOwogIHdpZHRoOiAxMDAlOwp9CgppIHsKICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogIHBhZGRpbmctbGVmdDogMTBweDsKICB3aWR0aDogMXB4Owp9CgppbnB1dCB7CiAgZGlzcGxheTogdGFibGUtY2VsbDsKICBmb250LXNpemU6IDIwcHg7CiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7CiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNDBweDsKfQpidXR0b24gewogIGhlaWdodDogNTBweDsKICBiYWNrZ3JvdW5kOiByZ2IoNjgsIDY4LCA2OCk7CiAgY29sb3I6IHdoaXRlOwogIGJvcmRlcjogbm9uZTsKICBib3JkZXItcmFkaXVzOiAyJTsKfQoKYnV0dG9uOmhvdmVyIHsKICBoZWlnaHQ6IDUwcHg7CiAgYmFja2dyb3VuZDogcmdiKDQ4LCA0OCwgNDgpOwogIGNvbG9yOiB3aGl0ZTsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogMiU7Cn0KCmJ1dHRvbjphY3RpdmUgewogIGhlaWdodDogNTBweDsKICBiYWNrZ3JvdW5kOiAjMDAwOwogIGNvbG9yOiB3aGl0ZTsKICBib3JkZXI6IG5vbmU7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDVweCAjYzFjMWMxOwogIC1tb3otYm94LXNoYWRvdzogaW5zZXQgMHB4IDBweCA1cHggI2MxYzFjMTsKICBib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDVweCAjYzFjMWMxOwp9Cg=="},{"version":3,"sources":["Itinerary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Itinerary.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <p class=\"none\" v-if=\"this.$root.$data.parkList.length === 0\">\n      No Parks in Itinerary\n    </p>\n    <ItineraryList :parks=\"parks\" />\n    <div v-show=\"this.$root.$data.parkList.length > 1\">\n      <h2>\n        Enter a starting park to calculate the shortest route between all the\n        parks on your list!\n      </h2>\n      <div class=\"wrapper\">\n        <div class=\"search\">\n          <div class=\"pure-form\">\n            <i class=\"fas fa-search\"></i\n            ><input\n              v-model=\"searchText\"\n              placeholder=\"Enter the park you want to start from (case sensitive!)\"\n            />\n          </div>\n        </div>\n      </div>\n      <form @submit.prevent=\"createTree\">\n        <button type=\"submit\">\n          Find shortest path through the national parks\n        </button>\n      </form>\n      <div v-if=\"this.parkOrder.length > 1\">\n        <div v-for=\"park in parkOrder\" :key=\"park\">\n          <p>{{ park }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ItineraryList from \"../components/ItineraryList.vue\";\nimport { Graph } from \"../graph.js\";\nexport default {\n  name: \"\",\n  components: {\n    ItineraryList,\n  },\n  data() {\n    return {\n      country: \"\",\n      parkOrder: [],\n      startState: \"\",\n      searchText: \"\",\n    };\n  },\n  computed: {\n    parks() {\n      return this.$root.$data.parkList;\n    },\n  },\n  methods: {\n    distance(lat1, lat2, lon1, lon2) {\n      // The math module contains a function\n      // named toRadians which converts from\n      // degrees to radians.\n      lon1 = (lon1 * Math.PI) / 180;\n      lon2 = (lon2 * Math.PI) / 180;\n      lat1 = (lat1 * Math.PI) / 180;\n      lat2 = (lat2 * Math.PI) / 180;\n\n      // Haversine formula\n      let dlon = lon2 - lon1;\n      let dlat = lat2 - lat1;\n      let a =\n        Math.pow(Math.sin(dlat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(dlon / 2), 2);\n\n      let c = 2 * Math.asin(Math.sqrt(a));\n\n      // Radius of earth in kilometers. Use 3956\n      // for miles\n      let r = 6371;\n\n      // calculate the result\n      return c * r;\n    },\n    createTree() {\n      console.log(\"function has been called\");\n      this.startState = this.searchText;\n      let g = new Graph();\n      for (let i = 0; i < this.$root.$data.parkList.length; i++) {\n        if (this.$root.$data.parkList[i].Name == this.startState) {\n          g.addNode(this.$root.$data.parkList[i].Name);\n        }\n      }\n      for (let i = 0; i < this.$root.$data.parkList.length; i++) {\n        if (this.$root.$data.parkList[i].Name != this.startState) {\n          g.addNode(this.$root.$data.parkList[i].Name);\n        }\n      }\n      for (let i = 0; i < this.$root.$data.parkList.length; i++) {\n        for (let j = 0; j < this.$root.$data.parkList.length; j++) {\n          if (\n            this.$root.$data.parkList[i].Name !=\n            this.$root.$data.parkList[j].Name\n          ) {\n            g.addEdge(\n              this.$root.$data.parkList[i].Name,\n              this.$root.$data.parkList[j].Name,\n              this.distance(\n                this.$root.$data.parkList[i].Latitude,\n                this.$root.$data.parkList[j].Latitude,\n                this.$root.$data.parkList[i].Longitude,\n                this.$root.$data.parkList[j].Longitude\n              )\n            );\n          }\n        }\n      }\n      console.log(\"prim's algorithm is called\");\n      this.parkOrder = g.primsMST(this.startState).nodes;\n      console.log(\"prim's algorithm is succeeds\");\n    },\n  },\n};\n</script>\n\n<style>\n.none {\n  text-align: center;\n  font-size: 32px;\n}\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n}\n\n.search {\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 50%;\n}\n\nform {\n  display: table;\n  width: 100%;\n}\n\ni {\n  display: table-cell;\n  padding-left: 10px;\n  width: 1px;\n}\n\ninput {\n  display: table-cell;\n  font-size: 20px;\n  border: none !important;\n  box-shadow: none !important;\n  width: 100%;\n  height: 40px;\n}\nbutton {\n  height: 50px;\n  background: rgb(68, 68, 68);\n  color: white;\n  border: none;\n  border-radius: 2%;\n}\n\nbutton:hover {\n  height: 50px;\n  background: rgb(48, 48, 48);\n  color: white;\n  border: none;\n  border-radius: 2%;\n}\n\nbutton:active {\n  height: 50px;\n  background: #000;\n  color: white;\n  border: none;\n  -webkit-box-shadow: inset 0px 0px 5px #c1c1c1;\n  -moz-box-shadow: inset 0px 0px 5px #c1c1c1;\n  box-shadow: inset 0px 0px 5px #c1c1c1;\n}\n</style>\n"]}]}